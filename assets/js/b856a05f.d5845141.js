"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[744],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),l=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,b=u["".concat(s,".").concat(m)]||u[m]||p[m]||a;return n?o.createElement(b,i(i({ref:t},c),{},{components:n})):o.createElement(b,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d.mdxType="string"==typeof e?e:r,i[1]=d;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1568:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return c},default:function(){return u}});var o=n(3117),r=n(102),a=(n(7294),n(3905)),i=["components"],d={sidebar_position:3,sidebar_label:"Boxed values"},s="Boxed Javascript values (advanced)",l={unversionedId:"advanced/boxed",id:"advanced/boxed",isDocsHomePage:!1,title:"Boxed Javascript values (advanced)",description:"By default, all properties in the Synced store are made collaborative, independently.",source:"@site/docs/advanced/boxed.md",sourceDirName:"advanced",slug:"/advanced/boxed",permalink:"/docs/advanced/boxed",editUrl:"https://github.com/yousefed/SyncedStore/edit/master/docs/docs/advanced/boxed.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Boxed values"},sidebar:"tutorialSidebar",previous:{title:"Rich text editors",permalink:"/docs/advanced/richtext"},next:{title:"MobX integration",permalink:"/docs/advanced/mobx"}},c=[{value:"Boxed values",id:"boxed-values",children:[],level:2}],p={toc:c};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"boxed-javascript-values-advanced"},"Boxed Javascript values (advanced)"),(0,a.kt)("p",null,"By default, all properties in the Synced store are made collaborative, ",(0,a.kt)("em",{parentName:"p"},"independently"),"."),(0,a.kt)("p",null,"This means that when you add an object to the store (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},'store.todos.push({ title: "groceries", completed: false}))'),", both the ",(0,a.kt)("inlineCode",{parentName:"p"},"title")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"completed")," property are seen as collaborative, and are synced independently."),(0,a.kt)("p",null,"This might not always be desirable, for two reasons:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Every collaborative object has some bookkeeping performance overhead."),(0,a.kt)("li",{parentName:"ol"},"Depending on your data model, it might not make sense. To determine this, ask yourself whether different properties should be allowed to be updated ",(0,a.kt)("em",{parentName:"li"},"independently"),'. In the "todo" example, is it ok for your app if user A sets a todo-item to completed, and user B changes the text at the same time?')),(0,a.kt)("h2",{id:"boxed-values"},"Boxed values"),(0,a.kt)("p",null,"If you want to prevent subproperties from being made collaborative, you can use ",(0,a.kt)("em",{parentName:"p"},"boxed values"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'import { syncedStore, Box, boxed } from "@syncedstore/core";\n\nexport const store = syncedStore(doc, { todos: [] as Box<Todo>[] });\n\n// ...\n\nstore.todos.push(boxed({ title: "groceries", completed: false }));\n\n// Use `value` to get the contents of the box\nconst completed = store.todos[0].value.completed;\n')),(0,a.kt)("p",null,'Now, the array will contain a single todo item that should be considered "frozen". Properties can be retrieved using ',(0,a.kt)("inlineCode",{parentName:"p"},".value"),". To update it, you now need to replace the entire item:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'// GOOD:\nstore.todos.splice(0, 1, boxed({ title: "groceries", completed: true }));\n\n// BAD, this won\'t sync as individual properties of a boxed item are not collaborative\nstore.todos[0].completed = true;\n')),(0,a.kt)("p",null,"Try it out for yourself in this interactive playground:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"live boxed",live:!0,boxed:!0},'import React from "react";\nimport { useSyncedStore } from "@syncedstore/react";\nimport { boxed } from "@syncedstore/core";\nimport { store } from "./store"; // the store we defined above\n\nexport default function App() {\n  const state = useSyncedStore(store);\n\n  return (\n    <div>\n      <p>Todo items:</p>\n      {JSON.stringify(state, undefined, 2)}\n\n      <div>\n        <button\n          onClick={() => {\n            state.todos.push(boxed({ title: "This is a todo", completed: false }));\n          }}\n        >\n          Add a boxed item\n        </button>\n        <br />\n        <button\n          disabled={state.todos.length === 0}\n          onClick={() => {\n            state.todos.splice(\n              0,\n              1,\n              boxed({\n                title: state.todos[0].value.title,\n                completed: !state.todos[0].value.completed,\n              })\n            );\n          }}\n        >\n          Edit first item (replace)\n        </button>\n        <br />\n        <button\n          disabled={state.todos.length === 0}\n          onClick={() => {\n            state.todos[0].value.completed = !state.todos[0].value.completed;\n          }}\n        >\n          Old (raises error): edit first item by mutating\n        </button>\n      </div>\n    </div>\n  );\n}\n')))}u.isMDXComponent=!0}}]);